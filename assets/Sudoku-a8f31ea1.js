import{r as p,j as o,F as k,a as z}from"./index-c87f5491.js";function x(){const[r,l]=p.useState(Array(9).fill(null).map(()=>Array(9).fill(0))),[f,d]=p.useState(Array(9).fill(null).map(()=>Array(9).fill(!1))),[i,g]=p.useState(Array(9).fill(null).map(()=>Array(9).fill(0)));p.useEffect(()=>{w()},[]);function y(){const n=f.map(t=>t.every(a=>!a)).every(t=>t);(r.map(t=>t.every(a=>a!=0)).every(t=>t)&&n||confirm(`You haven't finished the puzzle yet.
 Do you still want a new one?`))&&w()}function w(){let n=window.location.origin;window.location.href.includes("github")&&(n+="/ReactStuff"),n+="/Sudoku/sudoku.csv",fetch(n).then(e=>e.text()).then(e=>S(e)).then(e=>{g(e),l(e)}).catch(e=>console.log(e))}function b(n,e,t){i[n][e]||(isNaN(t)&&(t=0),!(t>9)&&l(a=>r.map((c,h)=>h==n?[...c.slice(0,e),t,...c.slice(e+1)]:[...c])))}function v(){l(n=>r.map((e,t)=>[...i[t]]))}return p.useEffect(()=>{let n=Array(9).fill(null).map(()=>Array(9).fill(!1));for(let e=0;e<9;e++)for(let t=0;t<9;t++){for(let u=e+1;u<9;u++){r[e][t]>0&&r[e][t]==r[u][t]&&(n[e][t]=!0,n[u][t]=!0);for(let s=t+1;s<9;s++)r[e][t]>0&&r[e][t]==r[e][s]&&(n[e][t]=!0,n[e][s]=!0)}let a=Math.floor(e/3),c=Math.floor(t/3),h=0,m=0;for(let u=0;u<3;u++)for(let s=0;s<3;s++)h=3*a+u,m=3*c+s,e!=h&&t!=m&&r[e][t]>0&&r[e][t]==r[h][m]&&(n[e][t]=!0,n[h][m]=!0)}d(n)},[r]),o(k,{children:z("div",{children:[o("table",{children:o("tbody",{children:r.map((n,e)=>o("tr",{children:n.map((t,a)=>o(A,{number:t,wrong:f[e][a],onChange:c=>b(e,a,parseInt(c.target.value))},a))},e))})}),o("button",{onClick:y,children:"New Puzzle"}),o("button",{onClick:v,children:"Reset Puzzle"}),z("p",{children:["This project is partially motivated by"," ",o("a",{href:"https://www.youtube.com/watch?v=dCCYALKSZEs",children:"this"})," youtube video, the version in the video sends a partially complete Sudoku board to an API which sends back the solution, then fills the board with that solution. My version gets a random puzzle from a file and the user is meant to try to solve it."]}),z("p",{children:["The puzzles are from"," ",o("a",{href:"https://www.kaggle.com/datasets/bryanpark/sudoku",children:"this"})," ","kaggle dataset where someone generated a large number of Sudoku. I took a small number of those puzzles and a random one is selected when a new puzzle is needed."]})]})})}function S(r){let l=r.split(/\r?\n|\r|\n/);l=l.at(-1)===""?l.slice(1,-1):l.slice(1),l=l.map(d=>d.split(",")[0]);let f=Math.floor(Math.random()*l.length);return C(l[f])}function C(r){let f=r.split("").map(i=>parseInt(i)),d=[];for(let i=0;i<9;i++)d.push(f.slice(9*i,9*(i+1)));return d}function A(r){return o("td",{children:o("input",{className:r.wrong?"wrong":"input",value:r.number>0?r.number:"",onChange:r.onChange})})}export{x as default};
